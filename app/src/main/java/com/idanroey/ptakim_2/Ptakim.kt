package com.idanroey.ptakim_2

class Ptakim(filteredCategories: IntArray, private val numberOfWords: Int, private val team1: Team, private val team2: Team) {

    var currentTeam: Team
    val wordsArray: Set<String>
    val noMoreCards: Boolean
        get() = numberOfWords - guessedRight.size == 0
    private var pointer = 0
    private var roundWordList = mutableListOf<String>()
    private var guessedRight = mutableSetOf<String>()
    private val wordBank: Map<Int, List<String>>
        get() = mapOf(
            R.id.places to listOf("מונטנגרו","פטרה", "לבנון", "מאצ'ו פיצ'ו" ,"אירלנד", "מקסיקו", "פיג'י", "מיאנמר (בורמה)", "ארמניה", "בולגריה", "קמבודיה", "לטביה", "אזרבייג'ן", "מוזמביק", "ירדן", "גרמניה", "אריתריא", "בוליביה", "פינלנד", "אקוודור", "קנדה", "איטליה", "לוב", "גינאה", "פורטוגל", "אלבניה", "ליטא", "הונגריה", "קולומביה", "איראן", "מולדובה", "יפן", "פרמידות" ,"קוריאה", "גאורגיה", "אפגניסטן", "מרוקו", "סין", "צ'אד", "ישראל", "קמרון", "בלארוס", "מוסקווה", "בליז", "קפריסין", "אסטוניה", "ג'מייקה", "האיטי", "עיראק", "הולנד", "הודו", "אינדונזיה", "נפאל", "פולין", "חוף השנהב", "צ'כיה", "מונגוליה", "קאזחסטן", "הוליווד","יד ושם","הגנים הבהאים","ים המלח", "הבית הלבן", "אילת", "הקולסאום", "סקוטלנד", "מאדים", "גבעת התחמושת", "כיכר רבין", "הכנרת", " ארגנטינה ", "ברצלונה", "החומה הסינית", "ירושליים", "מוזאון הלובר ", "קיסריה", " הירח", "מגדל פיזה", "רצועת עזה ", "הקריה", "מוזאון ישראל ", "הוותיקן"),
            R.id.movies to listOf("חברים","לשבור את הקרח ","מהיר ועצבני","מלך האריות","עולם היורה","שרק","אליס בארץ הפלאות","אי.טי.","שודדי הקאריביים","אלאדין","צעצוע של סיפור","רובוטריקים","ספיידרמן","הנוקמים","הטיטניק","הסופרנוס","Saturday Night Live","אקוומן" ,"המשרד","משפחת סופר-על","דקסטר","אבודים","היפה והחיה" ,"שרלוק","הארי פוטר", "פיקי בליינדרס","ריק ומורטי","ברבי" ,"נרקוס","סאות' פארק" ,"סקס והעיר הגדולה" ,"ויקינגים","כתום זה השחור החדש" ,"מראה שחורה", "צ'רנוביל", "קאסה דה פפל", "דונאלד דאק", "משפחת קדמוני", "שבי השבלול", "דרדסבא", "הגוקר", "צבי הנינג'ה", "מיקי מאוס","איך פגשתי את אמא" , "סיינפלד", "חלף עם הרוח", "מד מן", "צופן דה וינצי", "סטאר טרק", "להציל את טוראי ראיין", "בנות גילמור", "אוואטאר", "המדריך לטרמפיסט הגלקסיה", "שתיקת הכבשים", "המטריקס", "האוס", "פו הדב", "משחקי הכס", "המיניונים", "ספרות זולה", "האביר האפל", "הנוסע השמיני", "לוליטה", "הדרדסים", "בארט סימפסון", "מחוברים"),
            R.id.companies to listOf("פורד","סודה סטרים","תנובה", "אפל", "סנאפצ'אט", "רולס-רויס", "לינקדאין", "לואי-ויטון", "הילטון", "טיקטוק", "שאנל", "דיסני", "IBM", "טיפני","Airbnb", "פומה", "ריבוק", "טוויטר","אינסטגרם", "ספוטיפי", "אינטל","נטפליקס","צהל","סטארבקס","העיברית האוניברסיטה", "שילב", "פורשה", "בואינג", "פייסבוק", "הום-דיפו","נוקיה","סקייפ","הייניקן","פפסי","שווארמה" ,"מקדונלדס", "טסלה", "פייפאל", "קוקה-קולה", "TripAdvisor","Booking","ChatGPT","מקורות","זארה","טויוטה","מכון ויצמן","גוגל","מעריב","איקאה","אמזון", "יוטיוב","נייק","אאודי","וויז","וואטסאפ","גלגל'צ","פולסווגן","מיקרוסופט","סטימצקי","רמי-לוי","קינלי", "אלדן ", "מרצדס-בנץ", "סמסונג", "SpaceX", "רולקס", "אדידס", "פרארי", "סוני", "Dropbox", "גוצ'י", "למבורגיני", "ויזה", "בי.אם.וו", "פראדה" ,"חדשות 12", "וואלה"),
            R.id.objects to listOf("בגרות","DNA","AI","מכניקת הקוונטים","רוח הקודש","ארץ עיר","האנגאובר","טלפתיה","סיירת מטכ'ל","צלילה","גילוי אמריקה","גובלין","ווי פיי","סמוראי","מחשב נייד","כרטיס אשראי","שרירי בטן","ריקוד סלסה","מבוך","פומפיה","דינאמיט","לייק","באג אלפיים","קלסטרופוביה","בום על-קולי","המונה ליזה","טבעת נישואים","תואר ראשון","הרנסאנס","כוח המשיכה","פאי","קרטיב","עוגיה","יוגה","מינוס","משוואה","פטריות-הזיה","כותונת-משוגעים","פאלפל","וואקום","לביבה","מאריו","צום","שמש","נבל","שק-שינה","ספאם","דיפוזיה","מדריך-טיולים","בולם-זעזועים","עצם","הריון","מרפק","דיסק-און-קי","פנינה","סודה","בועות","הגדה-של-פסח","מולקולה","תופים","מדפסת","צמחונים","מפה","ראס אל חנות","נגר","הנדי מן","טיפוס","מסאז'","רגשות","גנטיקה","קפיצה בחבל","מונופול","שש בש","כדוררגל","צניחה חופשית","גיטרה","פוליטיקה","מטוס נייר","דומינו","תעודת זהות","תגובות כימיות","חומר אפל","אנרגיה סולארית","גלי קול","אספרסו","גרפיטי"),
            R.id.cultureLeaders to listOf("יו 2","ארז טל","הריסון פורד","מרלין מונרו","סטינג","שרית חדד","אלביס פרסלי","סנדרה בולוק","ביטלס","ספייס גירלס","עמוס עוז","מדונה","ג'וליה רוברטס","פבלו פיקאסו","ג'ון לנון"," משינה ","מטאליקה ","דיוויד בואי","וויטני יוסטון","נירוונה","ג'סטין טימברלייק","טום האנקס ","אופרה ווינפרי","צ'רלי צ'פלין","הביטלס","ביונסה","קוונטין טרנטינו","מריל סטריפ","U2","רוברט דה נירו","ג'וני דפ","מייקל ג'קסון","סטיבן ספילברג","בוב דילן","אלפרד היטשקוק","טום הנקס","אלטון ג'ון","The Who","The Rolling Stones","ג'ניפר לורנס","מייקל ג'ורדן","וויל סמית","אדל","כריסטופר נולן","רדיוהד","וודי אלן","Oasis","ליידי גאגא","The Police","Pink","The Doors","נטלי פורטמן","אנג'לינה ג'ולי","קולדפליי","בוב מרלי","מייגן מרקל","פרידריך ניטשה","ליאונרדו דיקפריו","סקרלט ג'והנסון","ג'ורג' קלוני","קווין ספייסי","טום קרוז","ניל יאנג","ג'ימי הנדריק"),
            R.id.sports to listOf("ניב ריסקין","הרמת משקולות","פורמולה-1","פוטבול","שייט","קלי סלייטר","סימון ביילס","הדיפת כדור ברזל","מוחמד עלי","אבי נימני","רוג'ר פדרר","ניו-יורק ניקס","פינגפונג","טייגר וודס","בייב רות'","בייסבול","כדורסל","טוני הוק","טריאתלון","אתלטיקה קלה","טניס","הטלת קידון","קונור מקגרגור","מארדונה","מייקל שומאכר","חץ וקשת","רפאל נדל","לברון ג'יימס","הוקי","סנוקר","קריקט","סנובורד","פולו","קפיצה לרוחק","גלישת גלים","יוסיין בולט","סקייטבורד","שאקיל אוניל","UFC","יוסי אבוקסיס","ליאו מסי","רכיבה על סוסים","כריסטיאנו רונאלדו","קארים עבדול ג'באר","סקי","ערן זהבי","רוגבי","שחייה","מכבי תל אביב","רכיבה על אופניים","אריק זאבי","לאנס ארמסטרונג","קובי בריאנט","טל ברודי","כדורגל","ריאל מדריד","לואיס המילטון","גולף","התעמלות קרקע","מייקל פלפס","חיים רביבו","מרתון"),
            R.id.nature to listOf("פפריקה","פיראנה","כבשה","תרנגול","שחף","דולפין","חד קרן","סוס","חתול","עכבר","ברווז","שושנת ים","קשיו","צב ים","סלק","דרקון","פינצ'ר","דלעת","עקרב","גויאבה","כלניות","נדל","צב","משפחת הטורפים","נשר","שפן","חזיר","חסרי חוליות","יונה","סרטן","יונקים","קרפד","צנון","צונמי","פרה","תוכי","דורבן","פינגווין","פנדה","היפופוטם","ציפור גן-עדן","גבעול","למור","ינשוף","שימפנזה","פרוקי רגליים","בבון","טרנטולה","לוויתן","זברה","יגואר","דרור","כלב","כריש","סלמנדרה","בננה","נקר","ג'ירף","אפרסק","פיל","כוכב ים","פלמינגו","ממותה","מדוזה","עז","צ'יטה","צפרדע","נמלה","קואלה","קיפוד ים","קנגרו","דוב הקוטב","כינים","דוב","שועל","ארמדילו","גורילה","אילן","איגואנה","חמור","זאב","טיגריס","פרפר","חיטה","אגוז","חגב","אלמוג","קפה","דבורה","ברבור","נחש","נענע","אפונה","לובסטר","דוכיפת","תנין","פלפל חריף","המזרח הרחוק","אוגר","אבוקדו","סנאי","חרק","צ'יוואווה"),
            R.id.scientists to listOf("פיבונאצ'י","דאלאי לאמה","דונלד טראמפ","המלכה אליזבת","סטיב ג'ובס","הילרי קלינטון","ארכימדס","אפלטון","וולדימיר פוטין","הנרי פורד","רנה דקארט","לואי פסטר","מאו דזה דונג","מרטין לות'ר קינג","אריסטו","תות ענח אמון","נפוליאון בונפרטה","גלילאו גלילי","אמא תרזה","חוסני מוברק","אברהם לינקולן","ישו","ג'וסף סטאלין","מארק צוקרברג","אברהם אבינו","ניל אמסטרונג","יוליוס קיסר","ג'ון קנדי","בניימין זאב הרצל","אדווין שרדינגר","אלן טיורינג","ניקולה טסלה","ויליאם שייקספיר","ליאונרדו דה וינצ'י","אלברט איינשטיין","מהטמה גנדי","מארי קירי","בטהובן","צ'רלס דרווין","פרידה קאלו","וינסטון צ'רצ'יל","וינסנט ואן גוך","זיגמונד פרויד","אילון מאסק","ג'יי.קי. רואלינג","סטיבן הוקינג","נלסון מנדלה","ולט דיסני","ביל גייטס","אמיליה ארהרט","קליאופטרה","מארק טוויין","תומאס אדיסון","אייזיק ניוטון","פרנקלין ד. רוזוולט","קוקו שאנל","סלוודור דאלי","באך","גרטה תונברג","אנה פרנק","רוברט אופנהיימר"),
            R.id.hamisiSalof to listOf("פאלפל כדורי","הבית של חומוס","'למה לא'","צומת חביתה","'לנצח'(להקיא)","נאד כלוא","אסף גרניט","אניני טעם","סיאסטה","ניר מהסביח","גחלת","power hour","back to school","אגנס","סלוף","לחוח","שיפרון","אינדינגב","קולסאום","דגים","שלאקות"),
        )
    // places: "מונטנגרו", "לבנון", "אירלנד", "מקסיקו", "פיג'י", "מיאנמר (בורמה)", "ארמניה", "בולגריה", "קמבודיה","לטביה", "אזרבייג'ן", "מוזמביק", "ירדן","גרמניה", "אריתריא", "בוליביה", "פינלנד", "אקוודור", "קנדה", "איטליה", "לוב", "גינאה", "פורטוגל", "אלבניה", "ליטא", "הונגריה", "קולומביה", "איראן", "מולדובה", "יפן", "קוריאה", "גאורגיה", "אפגניסטן", "מרוקו", "סין", "צ'אד", "ישראל", "קמרון", "בלארוס", "מוסקווה", "בליז", "קפריסין", "אסטוניה", "ג'מייקה", "האיטי", "עיראק", "הולנד", "הודו", "אינדונזיה", "נפאל", "פולין", "חוף השנהב", "צ'כיה", "מונגוליה", "קאזחסטן"
    // movies "חברים", "המשרד", "שרלוק", "פיקי בליינדרס", "נרקוס",  "ויקינגים", "מראה שחורה",  "צ'רנוביל", "קאסה דה פפל"
    // companies  "פורד", "אפל", "סנאפצ'אט", "רולס-רויס", "לינקדאין", "לואי-ויטון", "הילטון", "טיקטוק",
    //    "שאנל", "דיסני", "IBM", "טיפני","Airbnb", "פומה", "ריבוק", "טוויטר","אינסטגרם", "ספוטיפי",
    //    "אינטל", ","נטפליקס","צהל","סטארבקס","העיברית האוניברסיטה", "שילב", "פורשה", "בואינג", "פייסבוק",
    //    "הום-דיפו","נוקיה","סקייפ","הייניקן","פפסי","שווארמה" ,"מקדונלדס", "טסלה", "פייפאל", "קוקה-קולה",
    //    "TripAdvisor","Booking","ChatGPT","מקורות","זארה","טויוטה","מכון ויצמן","גוגל","מעריב","איקאה","אמזון",
    //    "יוטיוב","נייק","אאודי","וויז","וואטסאפ","גלגל'צ","פולסווגן","מיקרוסופט","סטימצקי","רמי-לוי","קינלי",
    //    "אלדן ", "מרצדס-בנץ", "סמסונג", "SpaceX", "רולקס", "אדידס", "פרארי", "סוני", "Dropbox", "גוצ'י",
    //    "למבורגיני", "ויזה", "בי.אם.וו", "פראדה"
    // objects ,"תופים","מדפסת","צמחונים","מפה","ראס אל חנות","נגר","הנדי מן","טיפוס","מסאז'","רגשות","גנטיקה","קפיצה בחבל","מונופול","שש בש","כדוררגל","צניחה חופשית","גיטרה","פוליטיקה","מטוס נייר","דומינו","תעודת זהות","תגובות כימיות","חומר אפל","אנרגיה סולארית","גלי קול","אספרסו","גרפיטי"
    // scientists "אדווין שרדינגר","אלן טיורינג","ניקולה טסלה","ויליאם שייקספיר","ליאונרדו דה וינצ'י","אלברט איינשטיין","מהטמה גנדי","מארי קירי","בטהובן","צ'רלס דרווין","פרידה קאלו","וינסטון צ'רצ'יל","וינסנט ואן גוך","זיגמונד פרויד","אילון מאסק","ג'יי.קי. רואלינג","סטיבן הוקינג","נלסון מנדלה","ולט דיסני","ביל גייטס","אמיליה ארהרט","קליאופטרה","מארק טוויין","תומאס אדיסון","אייזיק ניוטון","פרנקלין ד. רוזוולט","קוקו שאנל","סלוודור דאלי","באך","גרטה תונברג","אנה פרנק","רוברט אופנהיימר"
    // sports "כדורגל","כריסטיאנו רונאלדו","כדורסל","רוג'ר פדרר","טייגר וודס" ,"פוטבול","בייסבול","בייב רות'","קריקט","שחייה""קלי סלייטר", ,"לואיס המילטון" ,"מייקל פלפס","רוגבי","UFC","קונור מקגרגור","רכיבה על אופניים","לאנס ארמסטרונג","גלישת גלים" ,"סקייטבורד","טוני הוק","פינגפונג","פולו","סנוקר","הרמת משקולות","התעמלות קרקע","סימון ביילס" ,"אתלטיקה קלה","טניס","גולף","מרתון","סקי","סנובורד","רכיבה על סוסים","שייט","חץ וקשת"
    // nature "חיטה","בננה","סלק","אבוקדו","אפונה","משפחת הטורפים", "כלב","חתול","פיל","ג'ירף","דוב","צ'יטה","היפופוטם","חד קרן","גורילה","פינגווין","קנגרו","דולפין","קואלה","דוב הקוטב","שימפנזה","פנדה","תנין","סוס","חמור","עז","כבשה","פרה","חזיר","תרנגול","ברווז","ברבור","נשר","ינשוף","דרקון","תוכי","דרור","פלמינגו","יונה","שחף","מדוזה","כריש","פיראנה","כוכב ים","לובסטר","צב ים","צפרדע","קרפד","סלמנדרה","נחש","טרנטולה","עקרב","פרפר","דבורה","נמלה","חגב","חרק","עכבר","פרה","יונקים","ארמדילו","למור","אילן","סנאי","אוגר","שועל","יגואר"
    // cultureLeaders "צ'רלי צ'פלין","הביטלס","ביונסה","קוונטין טרנטינו","מריל סטריפ","U2","רוברט דה נירו","ג'וני דפ","מייקל ג'קסון","סטיבן ספילברג","בוב דילן","אלפרד היטשקוק","טום הנקס","אלטון ג'ון","The Who","The Rolling Stones","ג'ניפר לורנס","מייקל ג'ורדן","וויל סמית","אדל","כריסטופר נולן","רדיוהד","וודי אלן","Oasis","ליידי גאגא","The Police","Pink","The Doors","נטלי פורטמן","אנג'לינה ג'ולי","קולדפליי","בוב מרלי","מייגן מרקל","פרידריך ניטשה","ליאונרדו דיקפריו","סקרלט ג'והנסון","ג'ורג' קלוני","קווין ספייסי","טום קרוז","ניל יאנג","ג'ימי הנדריק"





    init {
        val numberOfCategories = filteredCategories.count()
        val wordsPerCategory = IntArray(numberOfCategories)

        for (i in 0 until numberOfCategories) {
            wordsPerCategory[i] = (1..numberOfWords).random()
        }

        val sum = wordsPerCategory.sum()
        val scale = numberOfWords.toDouble() / sum.toDouble()

        for ((index, number) in wordsPerCategory.withIndex()) {
            wordsPerCategory[index] = (number * scale).toInt()
        }

        while (wordsPerCategory.sum() != numberOfWords) {
            wordsPerCategory[(0 until numberOfCategories).random()] += 1
        }
        val wordsArray = Array(numberOfWords) { "" }
        var i = 0
        for ((index, category) in filteredCategories.withIndex()) {
            val words = wordBank[category]!!.shuffled().take(wordsPerCategory[index])
            for (j in 0 until wordsPerCategory[index]) {
                wordsArray[i] = words[j]
                i++
            }
        }
        wordsArray.shuffle()
        this.wordsArray = wordsArray.toSet()

        currentTeam = if ((1..2).random() == 1) team1 else team2
    }

    fun startRound() {
        roundWordList = wordsArray.shuffled().toMutableList()
        guessedRight.removeAll { true }
        pointer = 0
    }

    fun drawPetek(): String {
        return roundWordList[pointer]
    }

    fun wrongGuess() {
        pointer = ++pointer % roundWordList.size
        currentTeam.wrongGuess()
    }

    fun teamSwitch() {
        currentTeam = if (currentTeam === team1) team2 else team1
        roundWordList.shuffle()
        pointer = 0
    }

    fun rightGuess() {
        guessedRight.add(roundWordList[pointer])
        roundWordList.removeAt(pointer)
        try {
            pointer %= roundWordList.size
        } catch (e: ArithmeticException) {
            pointer = 0
        }
        currentTeam.rightGuess()
    }

    fun leftWords(): Int {
        return roundWordList.size
    }

}

fun main() {

    val t1 = Team(1)
    val t2 = Team(2)
    val c = Ptakim(
        arrayOf(R.id.places, R.id.objects, R.id.scientists).toIntArray(),
        6, t1, t2
    )
    println(c.wordsArray.joinToString(", "))
    var curTeam = t1
    c.startRound()
    while (!c.noMoreCards) {
        println(c.drawPetek())
        when (readln().toInt()) {
            0 -> c.wrongGuess()
            1 -> c.rightGuess()
            2 -> {
                c.teamSwitch()
                curTeam = if (curTeam === t1) t2 else t1
            }
            else -> break
        }

    }
}